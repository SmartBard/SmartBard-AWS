AWSTemplateFormatVersion: 2010-09-09
Description: SmartBard Cognito Cloudformation Template

Parameters: 
  Environment:
    Default: test
    Description: Env Suffix for AWS Cognito
    Type: String

Resources: 
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      DeviceConfiguration:
        DeviceOnlyRememberedOnUserPrompt: true
      UsernameConfiguration: 
        CaseSensitive: false
      AutoVerifiedAttributes:
        - email
      UserPoolName: !Sub smbd-user-pool${Environment}
      Policies:
        PasswordPolicy:
          MinimumLength: 6
          RequireLowercase: true
          RequireNumbers: true
          RequireSymbols: true
          RequireUppercase: true
          TemporaryPasswordValidityDays: 7

  UserPoolIdentityProviderGoogle:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      UserPoolId: !Ref UserPool
      ProviderName: Google
      ProviderType: Google
      ProviderDetails:
        client_id: 960494938495-jlqmd4c93ggjjlkj0q61765dpukfume1.apps.googleusercontent.com
        client_secret: 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
      AttributeMapping:
        email: email
        given_name: given_name
        family_name: family_name
        username: sub

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      AllowedOAuthFlowsUserPoolClient: true
      CallbackURLs:
        - http://localhost:3000
        - https://dev.smartbard.durkin.app
        - https://smbd-test.smartbard.durkin.app
        - https://prod.smartbard.durkin.app
        - https://smartbard.durkin.app
      AllowedOAuthFlows:
        - code
        - implicit
      AllowedOAuthScopes:
        - phone
        - email
        - openid
        - profile
      SupportedIdentityProviders:
        - COGNITO
        - Google

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub smbd${Environment}
      UserPoolId: !Ref UserPool

  UserPoolGroupAdmins:
    Type: AWS::Cognito::UserPoolGroup
    Properties: 
      Description: Group of users with Admin permissions
      GroupName: Admins
      RoleArn:
        Fn::ImportValue:
          !Sub "AdminRoleArn${Environment}"
      UserPoolId: !Ref UserPool

  UserPoolGroupStudents:
    Type: AWS::Cognito::UserPoolGroup
    Properties: 
      Description: Group of users with student permissions
      GroupName: Students
      RoleArn:
        Fn::ImportValue:
          !Sub "StudentRoleArn${Environment}"
      UserPoolId: !Ref UserPool


      

