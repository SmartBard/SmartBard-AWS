AWSTemplateFormatVersion: 2010-09-09
Description: SmartBard EC2 Cloudformation Template

Parameters: 
  Environment:
    Default: test
    Description: Env Suffix for SMBD EC2 Server
    Type: String

Resources:
  EC2IAMRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/SecretsManagerReadWrite
      RoleName: smbd-iam-role

  EC2IAMRoleProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles:
        - !Ref EC2IAMRole

  LBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for load balancer
      VpcId:
        Fn::ImportValue:
          !Sub "VPC${Environment}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub smbd-lb-sg${Environment}
 
  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for EC2 instances
      VpcId: 
        Fn::ImportValue:
            !Sub "VPC${Environment}"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3000
          ToPort: 3000
          SourceSecurityGroupId: !Ref LBSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: all
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub smbd-ec2-sg${Environment}

  LBSGIngressRule:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref LBSecurityGroup
      IpProtocol: tcp
      FromPort: 3000
      ToPort: 3000
      SourceSecurityGroupId: !Ref EC2SecurityGroup

  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateData:
        ImageId: ami-007855ac798b5175e
        InstanceType: t3.small
        KeyName: smbd-test-keypair
        IamInstanceProfile:
          - Arn: !Ref EC2IAMRoleProfile
        SecurityGroupIds:
          - !Ref EC2SecurityGroup
        TagSpecifications:
          - ResourceType: instance
            Tags:
              - Key: Name
                Value: !Sub smbd-ec2${Environment}
      LaunchTemplateName: smbd-template

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties: 
      IpAddressType: ipv4
      Name: !Sub smbd-load-balancer${Environment}
      Scheme: internet-facing
      SecurityGroups: 
        - !Ref LBSecurityGroup
      Subnets: 
        - Fn::ImportValue:
            !Sub "SubnetA${Environment}"
        - Fn::ImportValue:
            !Sub "SubnetB${Environment}"
      Type: application

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub smbd-target-group${Environment}
      Protocol: HTTP
      Port: 3000
      VpcId:
        Fn::ImportValue:
            !Sub "VPC${Environment}"
      TargetType: instance
      Matcher:
        HttpCode: 401

  LoadBalancerListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      SslPolicy: ELBSecurityPolicy-2016-08
      Certificates:
        - CertificateArn: arn:aws:acm:us-east-1:013130384093:certificate/f44022ba-d0a6-40a7-b79e-0edb89655ada

  EC2AutoScaler:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: smbd-scaler
      DefaultInstanceWarmup: 300
      DesiredCapacity: 1
      LaunchTemplate:
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: 1
      TargetGroupARNs:
        - !Ref TargetGroup
      MinSize: 1
      MaxSize: 1
      MaxInstanceLifetime: 86400
      VPCZoneIdentifier:
        - Fn::ImportValue:
            !Sub "SubnetA${Environment}"
